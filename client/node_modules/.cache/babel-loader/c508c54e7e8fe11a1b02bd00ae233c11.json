{"ast":null,"code":"import { takeLatest, put, all, call, take } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from './user.action';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure);\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignUpStart), call(onSignUpSuccess), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["C:/Users/admin/Desktop/react/crown3/client/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","take","UserActionTypes","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","auth","googleProvider","createUserProfileDocument","getCurrentUser","getSnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signUp","displayName","createUserWithEmailAndPassword","signInAfterSignUp","signOut","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","onSignOutStart","SIGN_OUT_START","userSagas"],"mappings":"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","sourcesContent":["import {takeLatest, put, all, call, take} from 'redux-saga/effects';\r\nimport UserActionTypes from './user.types';\r\nimport { \r\n   signInSuccess, \r\n   signInFailure,  \r\n   signOutSuccess, \r\n   signOutFailure,\r\n   signUpSuccess,\r\n   signUpFailure\r\n} from './user.action';\r\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\r\n\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth, additionalData){\r\n   try{\r\n      const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\r\n      const userSnapshot = yield userRef.get();\r\n      yield put(\r\n         signInSuccess({ id: userSnapshot.id, ...userSnapshot.data()})\r\n      );\r\n\r\n   }catch(error){\r\n      yield put(signInFailure(error));\r\n   }\r\n}\r\n\r\nexport function* signInWithGoogle(){\r\n   try{\r\n      const {user} = yield auth.signInWithPopup(googleProvider);\r\n      yield getSnapshotFromUserAuth(user); \r\n   }\r\n   catch(error){\r\n      yield put(signInFailure(error));\r\n   }\r\n}\r\n\r\nexport function* signInWithEmail({payload:{email, password}}){\r\n   try{\r\n      const {user} = yield auth.signInWithEmailAndPassword(email, password);\r\n      yield getSnapshotFromUserAuth(user);\r\n   }catch(error){\r\n      yield put(signInFailure(error));\r\n   }\r\n}\r\n\r\nexport function* isUserAuthenticated(){\r\n   try{\r\n      const userAuth = yield getCurrentUser();\r\n      if (!userAuth)return;\r\n      yield getSnapshotFromUserAuth(userAuth);\r\n   }catch(error){\r\n      yield put(signInFailure(error));\r\n   }\r\n}\r\n\r\nexport function* signUp({payload:{email, password, displayName}}){\r\n   try{\r\n      const {user}= yield auth.createUserWithEmailAndPassword(\r\n         email, \r\n         password);\r\n      yield put(signUpSuccess({user, additionalData:{displayName}}));\r\n   }catch(error){\r\n      yield put(signUpFailure);\r\n   }\r\n}\r\n\r\nexport function* signInAfterSignUp({payload:{user, additionalData}}){\r\n   yield getSnapshotFromUserAuth(user, additionalData);\r\n}\r\n\r\nexport function* signOut(){\r\n   try{\r\n      yield auth.signOut();\r\n      yield put(signOutSuccess());\r\n   }catch(error){\r\n      yield put(signOutFailure(error));\r\n   }\r\n}\r\n\r\nexport function* onGoogleSignInStart(){\r\n   yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n}\r\n\r\nexport function* onEmailSignInStart(){\r\n   yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\r\n}\r\n\r\nexport function* onCheckUserSession(){\r\n   yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\r\n}\r\n\r\nexport function* onSignUpStart(){\r\n   yield takeLatest(UserActionTypes.SIGN_UP_START, signUp)\r\n}\r\n\r\nexport function* onSignUpSuccess(){\r\n   yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp)\r\n}\r\n\r\nexport function* onSignOutStart(){\r\n   yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\r\n}\r\n\r\nexport function* userSagas(){\r\n   yield all([\r\n      call(onGoogleSignInStart), \r\n      call(onEmailSignInStart), \r\n      call(onCheckUserSession),\r\n      call(onSignUpStart), \r\n      call(onSignUpSuccess),\r\n      call(onSignOutStart)]);\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}