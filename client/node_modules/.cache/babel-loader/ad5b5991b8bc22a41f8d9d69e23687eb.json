{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTION_FAILURE,\n  payload: collectionsMap\n});\nexport const fetchCollectionFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTION_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["C:/Users/admin/Desktop/react/crown3/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","collectionsMap","type","FETCH_COLLECTION_FAILURE","payload","fetchCollectionFailure","errorMessage","fetchCollectionsStart","FETCH_COLLECTIONS_START","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD;AAEA,OAAO,MAAMC,uBAAuB,GAAGC,cAAc,KAAK;AACvDC,EAAAA,IAAI,EAAEL,eAAe,CAACM,wBADiC;AAEvDC,EAAAA,OAAO,EAAEH;AAF8C,CAAL,CAA9C;AAKP,OAAO,MAAMI,sBAAsB,GAAGC,YAAY,KAAK;AACpDJ,EAAAA,IAAI,EAAEL,eAAe,CAACM,wBAD8B;AAEpDC,EAAAA,OAAO,EAAEE;AAF2C,CAAL,CAA3C;AAKP,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AACzCL,EAAAA,IAAI,EAACL,eAAe,CAACW;AADoB,CAAP,CAA9B;AAIP,OAAO,MAAMC,0BAA0B,GAAG,MAAM;AAC7C,SAAOC,QAAQ,IAAI;AAChB,UAAMC,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACH,qBAAqB,EAAtB,CAAR;AAEAI,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAG;AACjC,YAAMd,cAAc,GAAGF,+BAA+B,CAACgB,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACV,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AACF,KAHD,EAGGe,KAHH,CAGSC,KAAK,IAAIP,QAAQ,CAACL,sBAAsB,CAACY,KAAK,CAACC,OAAP,CAAvB,CAH1B;AAIF,GARD;AASF,CAVM","sourcesContent":["import ShopActionTypes from './shop.types';\r\nimport {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils';\r\n\r\nexport const fetchCollectionsSuccess = collectionsMap => ({\r\n   type: ShopActionTypes.FETCH_COLLECTION_FAILURE,\r\n   payload: collectionsMap\r\n});\r\n\r\nexport const fetchCollectionFailure = errorMessage => ({\r\n   type: ShopActionTypes.FETCH_COLLECTION_FAILURE,\r\n   payload: errorMessage\r\n});\r\n\r\nexport const fetchCollectionsStart = () => ({\r\n   type:ShopActionTypes.FETCH_COLLECTIONS_START\r\n});\r\n\r\nexport const fetchCollectionsStartAsync = () => {\r\n   return dispatch => {\r\n      const collectionRef = firestore.collection('collections');\r\n      dispatch(fetchCollectionsStart());\r\n\r\n      collectionRef.get().then(snapshot =>{\r\n         const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n         dispatch(fetchCollectionsSuccess(collectionsMap));\r\n      }).catch(error => dispatch(fetchCollectionFailure(error.message)));\r\n   };\r\n}"]},"metadata":{},"sourceType":"module"}