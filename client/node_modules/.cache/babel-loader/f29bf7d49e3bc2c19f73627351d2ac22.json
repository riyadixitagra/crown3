{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\admin\\\\Desktop\\\\react\\\\crown\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _objectSpread from\"C:\\\\Users\\\\admin\\\\Desktop\\\\react\\\\crown\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"C:\\\\Users\\\\admin\\\\Desktop\\\\react\\\\crown\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import firebase from'firebase/app';import'firebase/firestore';import'firebase/auth';var config={apiKey:\"AIzaSyD8cry4X6dHOLVBrHaKH9PvPCqygC8WcRE\",authDomain:\"crown-db-137f1.firebaseapp.com\",databaseURL:\"https://crown-db-137f1.firebaseio.com\",projectId:\"crown-db-137f1\",storageBucket:\"crown-db-137f1.appspot.com\",messagingSenderId:\"183125673282\",appId:\"1:183125673282:web:c16cf816c865950c95f4db\",measurementId:\"G-DRZX3YJEY2\"};export var createUserProfileDocument=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(userAuth,additionlData){var userRef,snapShot,displayName,email,createdAt;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(userAuth){_context.next=2;break;}return _context.abrupt(\"return\");case 2:userRef=firestore.doc(\"users/\".concat(userAuth.uid));_context.next=5;return userRef.get();case 5:snapShot=_context.sent;if(snapShot.exists){_context.next=17;break;}displayName=userAuth.displayName,email=userAuth.email;createdAt=new Date();_context.prev=9;_context.next=12;return userRef.set(_objectSpread({displayName:displayName,email:email,createdAt:createdAt},additionlData));case 12:_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](9);console.log('error creating user',_context.t0.message);case 17:return _context.abrupt(\"return\",userRef);case 18:case\"end\":return _context.stop();}}},_callee,null,[[9,14]]);}));return function createUserProfileDocument(_x,_x2){return _ref.apply(this,arguments);};}();firebase.initializeApp(config);export var auth=firebase.auth();export var firestore=firebase.firestore();var provider=new firebase.auth.GoogleAuthProvider();provider.setCustomParameters({prompt:'select_account'});export var signInWithGoogle=function signInWithGoogle(){return auth.signInWithPopup(provider);};export default firebase;","map":{"version":3,"sources":["C:/Users/admin/Desktop/react/crown/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionlData","userRef","firestore","doc","uid","get","snapShot","exists","displayName","email","createdAt","Date","set","console","log","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"qeAAA,MAAOA,CAAAA,QAAP,KAAqB,cAArB,CACA,MAAO,oBAAP,CACA,MAAO,eAAP,CAEA,GAAMC,CAAAA,MAAM,CACZ,CACIC,MAAM,CAAE,yCADZ,CAEIC,UAAU,CAAE,gCAFhB,CAGIC,WAAW,CAAE,uCAHjB,CAIIC,SAAS,CAAE,gBAJf,CAKIC,aAAa,CAAE,4BALnB,CAMIC,iBAAiB,CAAE,cANvB,CAOIC,KAAK,CAAE,2CAPX,CAQIC,aAAa,CAAE,cARnB,CADA,CAYA,MAAO,IAAMC,CAAAA,yBAAyB,0FAAG,iBAAOC,QAAP,CAAiBC,aAAjB,sKACjCD,QADiC,iEAG/BE,OAH+B,CAGrBC,SAAS,CAACC,GAAV,iBAAuBJ,QAAQ,CAACK,GAAhC,EAHqB,uBAKdH,CAAAA,OAAO,CAACI,GAAR,EALc,QAK/BC,QAL+B,kBAOjCA,QAAQ,CAACC,MAPwB,0BAQzBC,WARyB,CAQLT,QARK,CAQzBS,WARyB,CAQZC,KARY,CAQLV,QARK,CAQZU,KARY,CAS3BC,SAT2B,CAShB,GAAIC,CAAAA,IAAJ,EATgB,wCAWvBV,CAAAA,OAAO,CAACW,GAAR,gBACFJ,WAAW,CAAXA,WADE,CAEFC,KAAK,CAALA,KAFE,CAGFC,SAAS,CAATA,SAHE,EAICV,aAJD,EAXuB,0FAkB7Ba,OAAO,CAACC,GAAR,CAAY,qBAAZ,CAAkC,YAAMC,OAAxC,EAlB6B,wCAqB9Bd,OArB8B,uEAAH,kBAAzBH,CAAAA,yBAAyB,gDAA/B,CAwBPV,QAAQ,CAAC4B,aAAT,CAAuB3B,MAAvB,EAEA,MAAO,IAAM4B,CAAAA,IAAI,CAAG7B,QAAQ,CAAC6B,IAAT,EAAb,CACP,MAAO,IAAMf,CAAAA,SAAS,CAACd,QAAQ,CAACc,SAAT,EAAhB,CAEP,GAAMgB,CAAAA,QAAQ,CAAE,GAAI9B,CAAAA,QAAQ,CAAC6B,IAAT,CAAcE,kBAAlB,EAAhB,CACAD,QAAQ,CAACE,mBAAT,CAA6B,CAACC,MAAM,CAAC,gBAAR,CAA7B,EACA,MAAO,IAAMC,CAAAA,gBAAgB,CAAC,QAAjBA,CAAAA,gBAAiB,SAAIL,CAAAA,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAAJ,EAAvB,CAEP,cAAe9B,CAAAA,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = \r\n{\r\n    apiKey: \"AIzaSyD8cry4X6dHOLVBrHaKH9PvPCqygC8WcRE\",\r\n    authDomain: \"crown-db-137f1.firebaseapp.com\",\r\n    databaseURL: \"https://crown-db-137f1.firebaseio.com\",\r\n    projectId: \"crown-db-137f1\",\r\n    storageBucket: \"crown-db-137f1.appspot.com\",\r\n    messagingSenderId: \"183125673282\",\r\n    appId: \"1:183125673282:web:c16cf816c865950c95f4db\",\r\n    measurementId: \"G-DRZX3YJEY2\"\r\n};\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionlData) => {\r\n    if(!userAuth)return;\r\n\r\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n\r\n    const snapShot = await userRef.get();\r\n\r\n    if(!snapShot.exists){\r\n        const { displayName, email}=userAuth;\r\n        const createdAt= new Date();\r\n        try{\r\n            await userRef.set({\r\n                displayName,\r\n                email,\r\n                createdAt,\r\n                ...additionlData\r\n            });\r\n        }catch(error){\r\n            console.log('error creating user',error.message);\r\n        }\r\n    }\r\n    return userRef;\r\n}; \r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore=firebase.firestore();\r\n\r\nconst provider= new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({prompt:'select_account'});\r\nexport const signInWithGoogle=()=>auth.signInWithPopup(provider);\r\n\r\nexport default firebase;"]},"metadata":{},"sourceType":"module"}