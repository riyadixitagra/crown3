{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\react\\\\crown3\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { selectCollectionForPreview, selectIsCollectionFetching } from '../../redux/shop/shop.selector';\nimport { fetchCollectionFailure, fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionFetching\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapDispatchToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/admin/Desktop/react/crown3/src/pages/shop/shop.component.jsx"],"names":["React","Route","createStructuredSelector","connect","WithSpinner","CollectionOverview","CollectionPage","selectCollectionForPreview","selectIsCollectionFetching","fetchCollectionFailure","fetchCollectionsStartAsync","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionFetching","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,OAAOC,kBAAP,MAA+B,oEAA/B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAAQC,0BAAR,EAAoCC,0BAApC,QAAqE,gCAArE;AACA,SAAQC,sBAAR,EAAgCC,0BAAhC,QAAiE,+BAAjE;AAEA,MAAMC,6BAA6B,GAAGP,WAAW,CAACC,kBAAD,CAAjD;AACA,MAAMO,yBAAyB,GAAGR,WAAW,CAACE,cAAD,CAA7C;;AAEA,MAAMO,QAAN,SAAuBb,KAAK,CAACc,SAA7B,CAAsC;AAGlCC,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAACL,MAAAA;AAAD,QAA8B,KAAKM,KAAzC;AACH;;AACDC,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACC,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAgC,KAAKH,KAA3C;AACJ,wBACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,EAAjC;AACA,MAAA,MAAM,EAAEJ,KAAK,iBACT,oBAAC,6BAAD;AAA+B,QAAA,SAAS,EAAEG;AAA1C,SAAoEH,KAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAMI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,gBAA3B;AAA4C,MAAA,MAAM,EAAEJ,KAAK,iBACrD,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEG;AAAtC,SAAgEH,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADA;AAaC;;AArBiC;;AAwBtC,MAAMK,eAAe,GAAEnB,wBAAwB,CAAC;AAC5CiB,EAAAA,oBAAoB,EAAEX;AADsB,CAAD,CAA/C;;AAIA,MAAMc,kBAAkB,GAAGC,QAAQ,KAAK;AACpCb,EAAAA,0BAA0B,EAAE,MAAKa,QAAQ,CAACb,0BAA0B,EAA3B;AADL,CAAL,CAAnC;;AAIA,eACAP,OAAO,CAACmB,kBAAD,EAAqBA,kBAArB,CAAP,CACCT,QADD,CADA","sourcesContent":["import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport {createStructuredSelector} from 'reselect';\r\nimport {connect} from 'react-redux';\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\r\nimport CollectionPage from '../collection/collection.component';\r\nimport {selectCollectionForPreview, selectIsCollectionFetching} from '../../redux/shop/shop.selector';\r\nimport {fetchCollectionFailure, fetchCollectionsStartAsync} from '../../redux/shop/shop.actions';\r\n\r\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nclass ShopPage extends React.Component{\r\n   \r\n\r\n    componentDidMount(){\r\n        const {fetchCollectionsStartAsync}= this.props;\r\n    }\r\n    render(){\r\n        const {match, isCollectionFetching} = this.props;\r\n    return(\r\n    <div className='shop-page'>\r\n        <Route exact path={`${match.path}`} \r\n        render={props => (\r\n            <CollectionOverviewWithSpinner isLoading={isCollectionFetching} {...props} />\r\n        )} \r\n        />\r\n        <Route path={`${match.path}/:collectionId`} render={props =>(\r\n            <CollectionPageWithSpinner isLoading={isCollectionFetching} {...props}/>\r\n        )} \r\n        />\r\n    </div>\r\n    );\r\n    }\r\n}\r\n\r\nconst mapStateToProps= createStructuredSelector({\r\n    isCollectionFetching: selectIsCollectionFetching\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchCollectionsStartAsync: ()=> dispatch(fetchCollectionsStartAsync())\r\n});\r\n\r\nexport default \r\nconnect(mapDispatchToProps, mapDispatchToProps)\r\n(ShopPage);"]},"metadata":{},"sourceType":"module"}