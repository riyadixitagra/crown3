{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\react\\\\crown3\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor() {\n    super();\n    this.unsubscribeFromSnapshot = null;\n    this.state = {\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    fetch('https://firestore.googleapis.com/v1/projects/crown-db-137f1/databases/(default)/documents/collection').then(response => response.json()).then(collections => console.log(collections)); //   this.unsubscribeFromSnapshot=collectionRef.onSnapshot(async snapshot =>{\n    //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    //   updateCollections(collectionsMap);\n    //   this.setState({loading: false});\n    // });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/admin/Desktop/react/crown3/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","WithSpinner","CollectionOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","updateCollections","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","constructor","unsubscribeFromSnapshot","state","loading","componentDidMount","props","collectionRef","collection","fetch","then","response","json","collections","console","log","render","match","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,OAAOC,kBAAP,MAA+B,oEAA/B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,MAAMC,6BAA6B,GAAGN,WAAW,CAACC,kBAAD,CAAjD;AACA,MAAMM,yBAAyB,GAAGP,WAAW,CAACE,cAAD,CAA7C;;AAEA,MAAMM,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAsC;AAClCC,EAAAA,WAAW,GAAE;AACT;AADS,SAMbC,uBANa,GAMa,IANb;AAEb,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAGA;;AAGAC,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAAET,MAAAA;AAAF,QAAwB,KAAKU,KAAnC;AACA,UAAMC,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB;AAGAC,IAAAA,KAAK,CAAC,sGAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,WAAW,IAAIC,OAAO,CAACC,GAAR,CAAYF,WAAZ,CAFzB,EALe,CAQf;AACA;AACA;AACA;AACA;AACH;;AACDG,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACC,MAAAA;AAAD,QAAS,KAAKX,KAApB;AACA,UAAM;AAACF,MAAAA;AAAD,QAAY,KAAKE,KAAvB;AACJ,wBACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEW,KAAK,CAACC,IAAK,EAAjC;AACA,MAAA,MAAM,EAAEZ,KAAK,iBACT,oBAAC,6BAAD;AAA+B,QAAA,SAAS,EAAEF;AAA1C,SAAuDE,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAMI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEW,KAAK,CAACC,IAAK,gBAA3B;AAA4C,MAAA,MAAM,EAAEZ,KAAK,iBACrD,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEF;AAAtC,SAAmDE,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADA;AAaC;;AAvCiC;;AA0CtC,MAAMa,kBAAkB,GAAGC,QAAQ,KAAK;AACpCxB,EAAAA,iBAAiB,EAAEyB,cAAc,IAAID,QAAQ,CAACxB,iBAAiB,CAACyB,cAAD,CAAlB;AADT,CAAL,CAAnC;;AAIA,eAAe/B,OAAO,CAAC,IAAD,EAAO6B,kBAAP,CAAP,CAAkCpB,QAAlC,CAAf","sourcesContent":["import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\r\nimport CollectionPage from '../collection/collection.component';\r\nimport {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils';\r\nimport { updateCollections } from '../../redux/shop/shop.actions';\r\n\r\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nclass ShopPage extends React.Component{\r\n    constructor(){\r\n        super();\r\n    this.state = {\r\n        loading: true\r\n    };\r\n   }\r\n    unsubscribeFromSnapshot = null;\r\n\r\n    componentDidMount(){\r\n        const { updateCollections } = this.props;\r\n        const collectionRef = firestore.collection('collections');\r\n\r\n\r\n        fetch('https://firestore.googleapis.com/v1/projects/crown-db-137f1/databases/(default)/documents/collection')\r\n            .then(response => response.json())\r\n            .then(collections => console.log(collections))\r\n        //   this.unsubscribeFromSnapshot=collectionRef.onSnapshot(async snapshot =>{\r\n        //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n        //   updateCollections(collectionsMap);\r\n        //   this.setState({loading: false});\r\n        // });\r\n    }\r\n    render(){\r\n        const {match}= this.props;\r\n        const {loading} = this.props;\r\n    return(\r\n    <div className='shop-page'>\r\n        <Route exact path={`${match.path}`} \r\n        render={props => (\r\n            <CollectionOverviewWithSpinner isLoading={loading} {...props} />\r\n        )} \r\n        />\r\n        <Route path={`${match.path}/:collectionId`} render={props =>(\r\n            <CollectionPageWithSpinner isLoading={loading} {...props}/>\r\n        )} \r\n        />\r\n    </div>\r\n    );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}