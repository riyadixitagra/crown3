{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFailure, signOutStart, signOutSuccess, signOutFailure } from './user.action';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { functions } from 'firebase';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["C:/Users/admin/Desktop/react/crown3/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","signInSuccess","signInFailure","signOutStart","signOutSuccess","signOutFailure","auth","googleProvider","createUserProfileDocument","getCurrentUser","functions","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","userSagas"],"mappings":"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","sourcesContent":["import {takeLatest, put, all, call} from 'redux-saga/effects';\r\nimport UserActionTypes from './user.types';\r\nimport { signInSuccess, signInFailure, signOutStart, signOutSuccess, signOutFailure} from './user.action';\r\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\r\nimport { functions } from 'firebase';\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth){\r\n   try{\r\n      const userRef = yield call(createUserProfileDocument, userAuth);\r\n      const userSnapshot = yield userRef.get();\r\n      yield put(\r\n         signInSuccess({ id: userSnapshot.id, ...userSnapshot.data()})\r\n      );\r\n\r\n   }catch(error){\r\n      yield put(signInFailure(error));\r\n   }\r\n}\r\n\r\nexport function* signInWithGoogle(){\r\n   try{\r\n      const {user} = yield auth.signInWithPopup(googleProvider);\r\n      yield getSnapshotFromUserAuth(user); \r\n   }\r\n   catch(error){\r\n      yield put(signInFailure(error));\r\n   }\r\n}\r\n\r\nexport function* signInWithEmail({payload:{email, password}}){\r\n   try{\r\n      const {user} = yield auth.signInWithEmailAndPassword(email, password);\r\n      yield getSnapshotFromUserAuth(user);\r\n   }catch(error){\r\n      yield put(signInFailure(error));\r\n   }\r\n}\r\n\r\nexport function* isUserAuthenticated(){\r\n   try{\r\n      const userAuth = yield getCurrentUser();\r\n      if (!userAuth)return;\r\n      yield getSnapshotFromUserAuth(userAuth);\r\n   }catch(error){\r\n      yield put(signInFailure(error));\r\n   }\r\n}\r\n\r\nexport function* signOut(){\r\n   try{\r\n      yield auth.signOut();\r\n      yield put(signOutSuccess());\r\n   }catch(error){\r\n      yield put(signOutFailure(error));\r\n   }\r\n}\r\n\r\nexport function* onGoogleSignInStart(){\r\n   yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n}\r\n\r\nexport function* onEmailSignInStart(){\r\n   yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\r\n}\r\n\r\nexport function* onCheckUserSession(){\r\n   yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\r\n}\r\n\r\nexport function* onSignOutStart(){\r\n   yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\r\n}\r\n\r\nexport function* userSagas(){\r\n   yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart)]);\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}